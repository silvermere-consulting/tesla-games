---
import type { CollectionEntry } from "astro:content";
import { gameAffiliateLinks, affiliates } from "../lib/affiliates";

const { entry } = Astro.props as { entry: CollectionEntry<"games"> };
const { Content } = await entry.render?.() ?? { Content: null };

// Build store links from slug (digital stores)
let links: {label: string; url: string}[] = [];
try { links = (await gameAffiliateLinks(entry.slug)) || []; } catch { links = []; }

const P = entry.data.platforms;
const yn = (v?: boolean) => (v ? "Yes" : "No");
const list = (a?: string[]) => (a && a.length ? a.join(", ") : "—");

const plat = [
  { label: "Tesla",       available: entry.data.tesla.available,       perks: list(entry.data.tesla.notes) },
  { label: "PC",          available: P.pc.available,                    perks: list(P.pc.perks) },
  { label: "Xbox",        available: P.xbox.available,                  perks: list(P.xbox.perks) },
  { label: "PlayStation", available: P.playstation.available,           perks: list(P.playstation.perks) },
  { label: "Switch",      available: P.switch.available,                perks: list(P.switch.perks) },
  { label: "Mobile",      available: P.mobile.available,                perks: list(P.mobile.perks) },
];
---

<section class="space-y-8">
  <!-- 1) DESCRIPTION -->
  <header class="space-y-4">
    {entry.data.coverImage && (
      <img src={entry.data.coverImage} alt={`${entry.data.title} title art`} class="rounded-xl" loading="lazy" />
    )}
    <div>
      <h1 class="text-3xl font-bold">{entry.data.title}</h1>
      {entry.data.short && <p class="text-slate-600 mt-2">{entry.data.short}</p>}
    </div>
    {Content && <div class="prose prose-slate max-w-none"><Content /></div>}
  </header>

  <!-- 2) TESLA vs PLATFORM COMPARISON -->
  <section class="space-y-3">
    <h2 class="text-xl font-semibold">Tesla vs Platform comparison</h2>

    <div class="grid md:grid-cols-2 gap-4">
      <div class="p-4 border rounded-xl">
        <h3 class="font-semibold mb-2">Tesla version</h3>
        <ul class="list-disc ml-6">
          <li>{entry.data.tesla.available ? "Available in Tesla Arcade" : "Not available in Tesla Arcade"}</li>
          {entry.data.tesla.scope && <li>{entry.data.tesla.scope}</li>}
          <li>Controller required: {yn(entry.data.tesla.controllerRequired)}</li>
          <li>Local co-op: {yn(entry.data.tesla.localCoop)}</li>
          {entry.data.tesla.notes.map(n => <li>{n}</li>)}
        </ul>
      </div>
      <div class="p-4 border rounded-xl">
        <h3 class="font-semibold mb-2">Where to buy / play at home</h3>
        {links.length
          ? <ul class="list-disc ml-6">{links.map(l => <li><a class="underline" href={l.url} rel="noopener nofollow sponsored">{l.label}</a></li>)}</ul>
          : <p class="text-slate-600">Store links coming soon.</p>
        }
      </div>
    </div>

    <div class="overflow-x-auto">
      <table class="w-full text-sm border rounded-xl overflow-hidden">
        <thead class="bg-slate-50 text-slate-700">
          <tr><th class="text-left p-3">Platform</th><th class="text-left p-3">Available</th><th class="text-left p-3">Key perks / differences</th></tr>
        </thead>
        <tbody>
          {plat.map(p => (
            <tr class="border-t">
              <td class="p-3 font-medium">{p.label}</td>
              <td class="p-3">{p.available ? "Yes" : "No"}</td>
              <td class="p-3">{p.perks}</td>
            </tr>
          ))}
        </tbody>
      </table>
    </div>
  </section>

  <!-- 3) CROSS-SAVES -->
  <section class="p-4 border rounded-xl">
    <h2 class="text-xl font-semibold mb-2">Cross-saves</h2>
    <ul class="list-disc ml-6">
      <li>Tesla → home export supported: {yn(entry.data.saves.teslaExportSupported)}</li>
      {entry.data.saves.crossSaveNotes.map(n => <li>{n}</li>)}
    </ul>
  </section>

  <!-- 4) FEATURES -->
  <section class="p-4 border rounded-xl">
    <h2 class="text-xl font-semibold mb-2">Features</h2>
    <ul class="list-disc ml-6">
      <li>Local co-op: {yn(entry.data.features.localCoop)}</li>
      <li>Online co-op (native): {yn(entry.data.features.onlineCoopNative)}</li>
      {entry.data.features.onlineCoopWorkaround.length > 0 && (
        <li>Online workaround: {entry.data.features.onlineCoopWorkaround.join(", ")}</li>
      )}
      <li>Controller recommended: {yn(entry.data.features.controllerRecommended)}</li>
    </ul>
  </section>

  <!-- OPTIONAL HARDWARE -->
  {entry.data.recommendedHardware.length > 0 && (
    <section class="p-4 border rounded-xl">
      <h2 class="text-xl font-semibold mb-2">Recommended hardware</h2>
      <ul class="list-disc ml-6">
        {entry.data.recommendedHardware.map((key) => (
          <li><a class="underline" href={affiliates.amazon(key)} rel="sponsored nofollow">{key.replaceAll("_"," ")}</a></li>
        ))}
      </ul>
    </section>
  )}

  <!-- 5) NOTES -->
  {entry.data.notes.length > 0 && (
    <section class="p-4 border rounded-xl">
      <h2 class="text-xl font-semibold mb-2">Notes</h2>
      <ul class="list-disc ml-6">
        {entry.data.notes.map(n => <li>{n}</li>)}
      </ul>
    </section>
  )}
</section>
